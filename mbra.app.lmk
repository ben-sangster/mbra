require "app"
lmk.set_name ("mbraapp")
lmk.add_vars {
   appName = "MBRA",
   majorVersion = "2",
   minorVersion = "0",
   bugVersion = "0",
   releaseType = "test 8",
   aboutImage = "images:IconFiles/AppIconMBRA_128x128.png",
}
lmk.add_files ({"version.xml",}, {src="version"})
lmk.add_files {"MBRA.app"}
lmk.add_preqs {
   "scripts",
   "mbra",
   "mbraInit",
   "dmzQtModuleMainWindowBasic",
   "dmzArchiveModuleBasic",
   "dmzArchivePluginAutoLoad",
   "dmzArchivePluginAutoSave",
   "dmzArchivePluginObject",
   "dmzArchivePluginInputChannelState",
   "dmzArchivePluginUndo",
   "dmzObjectModuleBasic",
   "dmzObjectPluginFlagGroup",
   "dmzObjectPluginUndo",
   "dmzObjectPluginCleanup",
   "dmzRenderModulePickBasic",
   "dmzInputModuleBasic",
   "dmzInputPluginKeyEventToMessage",
   "dmzLuaModuleBasic",
   "dmzQtExtLuaConsole",
   "dmzLuaExtInput",
   "dmzLuaExtObject",
   "dmzLuaExtPick",
   "dmzLuaExtRuntime",
   "dmzQtPluginLuaProfiler",
   "dmzQtPluginVersion",
   "dmzQtPluginWidget",
   "dmzQtPluginStackedWidget",
   "dmzInputPluginMouseEventToMessage",
   "dmzQtModuleMapBasic",
   "dmzQtPluginRenderPickMap",
   "dmzQtPluginCanvasMap",
   "dmzQtModuleCanvasBasic",
   "dmzQtPluginCanvasZoomPanMap",
   "dmzQtPluginCanvasObject",
   "dmzQtPluginCanvasObjectBasic",
   "dmzQtPluginCanvasLink",
   "dmzQtPluginCanvasLayer",
   "dmzQtPluginRenderPickCanvas",
   "dmzQtPluginMapArchive",
   "dmzQtPluginButtonToChannel",
   "dmzMBRAPluginArchiveSupport",
   "dmzMBRAPluginPropertyEditor",
   "dmzMBRAPluginPropertyTable",
   "dmzMBRAPluginCalculate",
   "dmzMBRAPluginNABudget",
   "dmzMBRAPluginNASimulator",
   "dmzMBRAPluginFTViewState",
   "dmzMBRAPluginLinkEditor",
   "dmzMBRAPluginMenu",
   "dmzQtPluginCanvasAutoLink",
   "dmzQtPluginGraph",
   "dmzQtPluginTabWidget",
   "dmzQtPluginMapObjectPosition",
   "dmzQtPluginCanvasZoomPan",
   "dmzQtPluginCanvasArchive",
   "dmzQtPluginMapProperties",
   "dmzQtPluginMenuToMessage",
   "dmzMBRAPluginFaultTreeBuilder",
   "dmzMBRAPluginFaultTreeAutoLayout",
   "dmzMBRAPluginFTCalculate",
-- dev plugins
   "dmzLuaPluginReset",
   "dmzPluginMsgDump",
   "dmzPluginUndoDump",
   "dmzObjectPluginDump",
   "dmzQtPluginLuaProfiler",
   "dmzInputPluginKeyEventToMessage",
}

app.set_app ("mbra")

app.set_plist ("Info.plist")

app.add_icons {"AppIcon.icns", "DocIcon.icns"}

app.add_config {
   "config/",
   "$(localTmpDir)/version.xml",
}

app.add_data {
   "assets/mbra.rcc",
   "assets/Images/FT_ComponentBox.svg",
   "assets/Images/FT_LogicAnd.svg",
   "assets/Images/FT_LogicOr.svg",
   "assets/Images/FT_ThreatBox.svg",
   "assets/Images/FT_ThreatFillGreen.svg",
   "assets/Images/FT_ThreatFillSolid.svg",
   "assets/Images/NA_Node.svg",
   "assets/Images/NA_Node_Highlight.svg",
   "assets/Images/NA_Node_Flag.png",
   "assets/Images/NA_ResultsOverlay180.svg",
   "assets/Images/NA_ResultsOverlayLinks180.svg",
}

app.add_scripts {
   "scripts/",
}

lmk.add_vars ({
   installPaths = {
      {"QtCore.framework/Versions/4/QtCore", "@executable_path/../Frameworks/Qt/QtCore"},
      {"QtGui.framework/Versions/4/QtGui", "@executable_path/../Frameworks/Qt/QtGui"},
      {"QtXml.framework/Versions/4/QtXml", "@executable_path/../Frameworks/Qt/QtXml"},
      {"QtSvg.framework/Versions/4/QtSvg", "@executable_path/../Frameworks/Qt/QtSvg"},
      {"QtOpenGL.framework/Versions/4/QtOpenGL", "@executable_path/../Frameworks/Qt/QtOpenGL"},
      {"QtNetwork.framework/Versions/4/QtNetwork", "@executable_path/../Frameworks/Qt/QtNetwork"},
   },
}
,{opt = true})
